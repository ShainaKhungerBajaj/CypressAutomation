{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-07-10T16:27:22.861Z",
    "end": "2023-07-10T16:27:56.749Z",
    "duration": 33888,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "90279ab9-eaeb-422d-bc74-c15df002a2a9",
      "title": "",
      "fullFile": "cypress\\mytests\\merci\\ExcelFetchingData.js",
      "file": "cypress\\mytests\\merci\\ExcelFetchingData.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82cfadbc-b7c1-4978-b48e-b92659160b78",
          "title": "Working with cy.task()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "URL Test - generateJSONFromExcel",
              "fullTitle": "Working with cy.task() URL Test - generateJSONFromExcel",
              "timedOut": null,
              "duration": 25203,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos\",\n    \"value\": \"cypress\\\\mytests\\\\merci\\\\ExcelFetchingData.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        {\n          \"title\": \"Failed screenshot\",\n          \"value\": \"\\\\ExcelFetchingData.js\\\\Working with cy.task() -- URL Test - generateJSONFromExcel (failed).png\"\n        }\n      ]\n    ]\n  }\n]",
              "code": "cy.visit('https://automationexercise.com');\ncy.get(':nth-child(1) > .panel-heading > .panel-title > a > .badge > .fa').click();\ncy.contains(\"Dress\").click().should('have.text', 'Dress ');\ncy.contains(\"View Product\").click().should('have.text', 'View Product');\ncy.xpath('//button[@type=\"button\"]').click().should('have.class', 'btn btn-default cart');\ncy.xpath('//button[contains(text(),\"Continue Shopping\")]').click().should('have.attr', 'class');\ncy.contains('Madame').click().should('have.attr', 'href', '/brand_products/Madame');\ncy.get(':nth-child(6) > .product-image-wrapper > .single-products > .productinfo > img').should('have.attr', 'src').and('have.string', '/get_product_picture/38');\ncy.get(':nth-child(6) > .product-image-wrapper > .choose > .nav > li > a').click().should('have.attr', 'href', '/product_details/38');\nconst numClicks = 3; // Number of times to click the up arrow with loop\nfor (let i = 0; i < numClicks; i++) {\n  cy.get('input[name=\"quantity\"]').click().type('{upArrow}');\n}\ncy.xpath('//button[@class=\"btn btn-default cart\"]').click().should('have.attr', 'type');\ncy.contains(\"View Cart\").click().should('have.attr', 'href').and('have.string', '/view_cart');\ncy.contains(\"Proceed To Checkout\").click().should('have.css', 'color', 'rgb(255, 255, 255)');\nconst myLink = cy.get('.modal-body > :nth-child(2) > a > u'); // a href tag code to click on login/Registration page\nmyLink.invoke('attr', 'href').then(href => {\n  cy.visit('https://automationexercise.com/login');\n});\nconst faker = __webpack_require__(/*! faker */ \"./node_modules/faker/index.js\"); // Random Email Generation\nfunction getRandomEmail() {\n  const randomEmail = faker.internet.email();\n  return randomEmail;\n}\nconst randomEmail = getRandomEmail(); // Usage\ncy.wrap(randomEmail).should('match', /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/);\ncy.get('input[name=\"name\"]').type('Smaira').should('have.attr', 'name');\ncy.get('input[data-qa=\"signup-email\"]').type(randomEmail);\ncy.get('button[data-qa=\"signup-button\"]').click().should('have.text', 'Signup');\nconst excelFilePath = \"cypress/downloads/Registration.xlsx\";\nconst sheetName = \"Registration\";\ncy.task(\"generateJSONFromExcel\", {\n  excelFilePath,\n  sheetName\n}).then(user => {\n  cy.get(\"#id_gender2\").check();\n  cy.get(\"#password\").type(user.Password);\n  cy.get('#days').select(user.Day);\n});",
              "err": {
                "message": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type",
                "estack": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type\n    at Context.type (https://automationexercise.com/__cypress/runner/cypress_runner.js:143864:76)\n    at wrapped (https://automationexercise.com/__cypress/runner/cypress_runner.js:160844:19)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/mytests/merci/ExcelFetchingData.js:59:30)",
                "diff": null
              },
              "uuid": "99d05cbc-b4fd-440b-8349-68b1ce54748f",
              "parentUUID": "82cfadbc-b7c1-4978-b48e-b92659160b78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "99d05cbc-b4fd-440b-8349-68b1ce54748f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}